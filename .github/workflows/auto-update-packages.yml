#
# This workflow was created automatically from the `auto-update-template.yml` by running `make -C .github auto-update-workflow`
# DO NOT EDIT THIS WORKFLOW
#

name: "auto-update-packages"
on:
  workflow_dispatch:

  schedule:
    # See cron format at https://docs.github.com/en/free-pro-team@latest/actions/reference/events-that-trigger-workflows#scheduled-events
    # Update packages 5am and 4pm PST
    - cron:  '0 0,13 * * *'

jobs:
  auto-update:
    runs-on: ubuntu-latest
    strategy:
      # do not let 1 failure stop the other jobs from proceeding
      fail-fast: false
      matrix:
        package-name:
        - amazon-ecr-credential-helper
        - amtool
        - argocd
        - assume-role
        - atlantis
        - atmos
        - awless
        - aws-copilot-cli
        - aws-iam-authenticator
        - aws-nuke
        - aws-okta
        - aws-vault
        - cfssl
        - cfssljson
        - chamber
        - cilium-cli
        - cli53
        - cloud-nuke
        - cloudflared
        - cloudposse-atlantis
        - codefresh
        - conftest
        - consul
        - ctop
        - direnv
        - doctl
        - duffle
        - ec2-instance-selector
        - ecspresso
        - emailcli
        - envcli
        - fargate
        - fetch
        - figurine
        - fzf
        - gh
        - ghr
        - github-commenter
        - github-release
        - github-status-updater
        - gitleaks
        - go-jsonnet
        - gomplate
        - gonsul
        - goofys
        - gosu
        - gotop
        - grpcurl
        - hcledit
        - helm
        - helm2
        - helm3
        - helmfile
        - htmltest
        - hugo
        - infracost
        - jp
        - jq
        - json2hcl
        - jx
        - k3d
        - k6
        - k9s
        - katafygio
        - kfctl
        - kind
        - kops
        - kops-1.12
        - krew
        - kubecron
        - kubectl
        - kubectl-1.13
        - kubectl-1.14
        - kubectl-1.15
        - kubectl-1.16
        - kubectl-1.17
        - kubectl-1.18
        - kubectl-1.19
        - kubectl-1.20
        - kubectl-1.21
        - kubectl-1.22
        - kubectl-1.23
        - kubectl-1.24
        - kubectl-1.25
        - kubectl-1.26
        - kubectl-1.27
        - kubectl-1.28
        - kubectl-1.29
        - kubectl-1.30
        - kubectl-1.31
        - kubectl-1.32
        - kubectx
        - kubens
        - kubeval
        - lazydocker
        - lectl
        - minikube
        - misspell
        - nomad
        - opa
        - pack
        - packer
        - pandoc
        - pgmetrics
        - pluto
        - popeye
        - promtool
        - rainbow-text
        - rakkess
        - rancher
        - rbac-lookup
        - retry
        - saml2aws
        - scenery
        - sentinel
        - sentry-cli
        - shellcheck
        - shfmt
        - slack-notifier
        - sops
        - spacectl
        - spotctl
        - sshm
        - stern
        - sudosh
        - teleport
        - teleport-4.2
        - teleport-4.3
        - teleport-4.4
        - teleport-5.0
        - terraform
        - terraform-0.11
        - terraform-0.12
        - terraform-0.13
        - terraform-0.14
        - terraform-0.15
        - terraform-1
        - terraform-config-inspect
        - terraform-docs
        - terraform-module-versions
        - terraform_0.11
        - terraform_0.12
        - terraform_0.13
        - terragrunt
        - terrahelp
        - tfenv
        - tflint
        - tfmask
        - tfschema
        - tfsec
        - thanos
        - trivy
        - turf
        - variant
        - variant2
        - vault
        - velero
        - vendir
        - venona
        - vert
        - yajsv
        - yq

    steps:
      - uses: actions/checkout@v4
      # Use specific `go` version when packages updates are fetched with `go`
      - if: matrix.package-name == 'terraform-config-inspect'
        uses: actions/setup-go@v5
        with:
          cache: false
          go-version-file: 'vendor/${{matrix.package-name}}/go.mod'

      - name: Get current package information
        shell: bash
        id: current
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        run: |
          make -C vendor/${{matrix.package-name}} info/github

      - name: Update packages
        shell: bash
        id: update
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        run: |
          make -C vendor/${{matrix.package-name}} auto-update
          make -C vendor/${{matrix.package-name}} info/github

      - name: Update readme
        shell: bash
        id: readme
        if: steps.update.outputs.package_version != steps.current.outputs.package_version
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        run: |
          make init
          make readme/deps || { printenv; printf "\n^^^env above, vvv make readme/deps debug below\n\n"; make -d readme/deps; }
          make readme || { printenv; printf "\n^^^env above, vvv make readme debug below\n\n"; make -d readme; }

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6
        if: steps.update.outputs.package_version != steps.current.outputs.package_version
        with:
          token: ${{ secrets.GITHUB_BOT_TOKEN }}
          committer: 'cloudpossebot <11232728+cloudpossebot@users.noreply.github.com>'
          author: 'cloudpossebot <11232728+cloudpossebot@users.noreply.github.com>'
          commit-message: Update ${{ steps.update.outputs.package_name }} to ${{ steps.current.outputs.package_version }} â†’ ${{ steps.update.outputs.package_version }}
          title: Update ${{ steps.update.outputs.package_name }} to ${{ steps.update.outputs.package_version }}
          body: |-
            ## what

            This is an auto-generated PR that updates the ${{ steps.update.outputs.package_name }} package version.

            | Meta              | Details                                      |
            |:------------------|:---------------------------------------------|
            | **Package Name**  | `${{ steps.update.outputs.package_name }}`   |
            | **Vendor**        | [${{ steps.update.outputs.vendor }}](${{ steps.update.outputs.package_homepage_url }}) |
            | **Version**       | ${{ steps.update.outputs.package_version }}  |
            | **License**       | ${{ steps.update.outputs.package_license }}  |
            | **Repo**          | ${{ steps.update.outputs.package_repo_url }} |
            | **Arch**          | ${{ steps.update.outputs.arch }}             |
            | **OS**            | ${{ steps.update.outputs.os }}               |
            | **Download URL**  | ${{ steps.update.outputs.download_url }}     |

            ## why

            Publish the latest release of `${{ steps.update.outputs.package_name }}` to our package repository.

          branch: auto-update/${{ steps.update.outputs.package_name }}-${{ steps.update.outputs.package_version }}
          base: main
          delete-branch: true
          labels: |
            auto-update
            vendor/${{ steps.update.outputs.package_name }}
